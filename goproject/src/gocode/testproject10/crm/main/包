使用包原因
我们不可能把所以函数放在同一个源文件，可以分门别类的把函数放在不同的源文件
解决同名问题，两个人都想定义一个同名的函数，在同一个文件中是不可以定义相同名字的函数的，此时可以用包来区分
package dbtset
import "fmt"
func GetConn(){//首字母大写才可以被其他包访问
	fmt.Println("执行了db函数")
}


package main//package 进行包声明，建议包的声明和所在文件夹同名
//main 包是程序的入口包，一般main函数会放在这个包下
//包名路径是从$GOPATH/src后开始计算使用/进行路径分隔
//import "fmt"
//包名路径是从$GOPATH/src后开始计算使用/进行路径分隔
//import "gocode/testproject10/crm/db"
//如果有多个包，建议一次性导入
import (
	"fmt"
	"gocode/testproject10/crm/db"
)
func main(){
	fmt.Println("您好 gomain")
	dbtset.GetConn()// 函数调用的时候前面要定位到所在的包
}


首字母大写，函数可以被其他包访问
一个目录下不能有重复的函数
包名和文件名字可以不一样
一个目录下同级别文件归属一个包；同层级包的声明必须一致
包到底是什么
程序层面，所有使用相同的package 包名的源文件组成代码模块
在源文件层面就是一个文件夹
可以给包起别名，起完别名原来的包名不能用了
