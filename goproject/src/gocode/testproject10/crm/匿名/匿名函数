go 支持匿名函数，如果我们某个函数只希望使用1次，可以考虑匿名函数
匿名函数使用方式
在定义匿名函数的时候就直接调用，这种方式匿名函数只能调用一次
result := func (num1 int, num2 int) int{
		return num1 + num2
	}(10,20)
	fmt.Println(result)
将匿名函数赋给一个变量(该变量就是函数变量了)，在通过该变量来调用匿名函数
fmt.Println(result)
	var sub = func (num1 int,num2 int) int{
		return num1 - num2
	}
	chenxi := sub(79,45)
	fmt.Println(chenxi)
如何让一个匿名函数，可以在整个程序中有效呢？将匿名函数给一个全局变量就可以了
var Func01 = func (num1 int, num2 int) int {
	return num1 * num2
}
func main(){
	result := func (num1 int, num2 int) int{
		return num1 + num2
	}(10,20)
	fmt.Println(result)
	var sub = func (num1 int,num2 int) int{
		return num1 - num2
	}
	chenxi := sub(79,45)
	fmt.Println(chenxi)
	fmt.Println(Func01(3,7))
}