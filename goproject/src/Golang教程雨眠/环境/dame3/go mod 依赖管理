go mod 依赖管理
案例素材
#依赖包
github.com/gin-gonic/gin@v1.9.0
golang.org/x/crypto@v0.0.0
github.com/golang/crypto@v1.2.3
#插件
github.com/google/gops@latest

go.modo 文件
//指定module 名
module gomod
//指定go Sdk 版本
go 1.22
//当前module (项目)依赖的包，通过require 指定
   require(
   github.com/bytedance/sonic v1.8.0 //indirect
   )
   //排除第三方包，在确认第三方依赖某个版本存在bug的情况下，可以采用排除法
   exclude(
     //dependency latest
     )
   // 当前项目作为其他项目的依赖时，如果某个版本出现问题
   retract (
      v1.0.0
      v1.0.2
      )
   go mod 命令
   # 将模块下载
   go mod download
   # 例如
   go mod download github.com/gin-gonic/gin@v1.9.0
   # 初始化一个新模块
   go mod init
   # 例如
   go mod init gomodcase
   # 添加缺少依赖，删除未使用的依赖
   go mod tidy
   # 通过工具或脚本编辑
   go mod edit
   # 添加依赖项
   go mod edit -requir="github.com/git-gonic/gin@v1.9.0"
   # 替换路径
   go mod edit -replace="golang.org/x/crypto@v0.0.0=golang.org/x/crypto@latest"
   # 排除第三方依赖的某个版本
   go mod edit -exclude="github.com/gin-gonic/git@v1.9.0"
   # 当前项目作为其他项目的依赖时，添加撤回版本用于排除有问的依赖
   go mod edit -retract="v1.0.0"
   go mod edit -retract

